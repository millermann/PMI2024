    public void guardarProyectosEnArchivo(List<ProyectoTecnologico> proyectos, String nombreArchivo) throws IOException {
        try (FileWriter writer = new FileWriter(nombreArchivo)) {
            for (ProyectoTecnologico proyecto : proyectos) {
                if (proyecto instanceof DesarrolloDeHardware) {
                    writer.write("proyecto de hardware\n");
                    writer.write("tipo: " + ((DesarrolloDeHardware) proyecto).getTipoDispositivo() + "\n");
                } else if (proyecto instanceof DesarrolloDeSoftware) {
                    writer.write("proyecto de software\n");
                    writer.write("tipo: " + ((DesarrolloDeSoftware) proyecto).getTipoAplicacion() + "\n");
                }
                writer.write("ID: " + proyecto.getProyectoID()+ "\n");
                writer.write("titulo: " + proyecto.getTitulo() + "\n");
                writer.write("descripcion: " + proyecto.getDescripcion() + "\n");
                writer.write("presupuesto: " + proyecto.getPresupuesto() + "\n");
                writer.write("fecha de inicio: " + proyecto.getFechaInicio() + "\n");
                writer.write("fecha de entrega: " + proyecto.getFechaFin() + "\n");
                writer.write("ingenieros:\n");
                for (Ingeniero ingeniero : proyecto.obtenerTodosLosIngenieros()) {
                    writer.write("\tnombre: " + ingeniero.getNombre() + "\n");
                    writer.write("\tapellido: " + ingeniero.getApellido() + "\n");
                    writer.write("\tmail: " + ingeniero.getMail() + "\n");
                    writer.write("\tespecialidad: " + ingeniero.getEspecialidad() + "\n");
                    writer.write("\tfecha de contratacion: " + ingeniero.getFechaContratacion() + "\n");
                    writer.write("\tproyectos asignados: " + String.join(", ", ingeniero.getIdsProyectosAsociados()) + "\n");
                }
                writer.write("recursos tecnologicos:\n");
                for (RecursoTecnologico recurso : proyecto.obtenerTodosLosRecursosTecnologicos()) {
                    writer.write("\tnombre: " + recurso.getNombre() + "\n");
                    writer.write("\tdescripcion: " + recurso.getDescripcion() + "\n");
                }
                writer.write("//fin\n");
            }
            writer.close();
        }
    }

    public List<ProyectoTecnologico> cargarProyectosDesdeArchivo(String nombreArchivo) throws IOException {
        List<ProyectoTecnologico> proyectos = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader(nombreArchivo))) {
            String linea;
            ProyectoTecnologico proyecto = null;
            while ((linea = reader.readLine()) != null) {
                linea = linea.trim(); // Eliminar espacios en blanco
                if (linea.startsWith("proyecto de hardware")) {
                    proyecto = new DesarrolloDeHardware();
                } else if (linea.startsWith("proyecto de software")) {
                    proyecto = new DesarrolloDeSoftware();
                } else if (linea.startsWith("tipo: ")) {
                    if (proyecto instanceof DesarrolloDeHardware) {
                        ((DesarrolloDeHardware) proyecto).setTipoDispositivo(linea.substring(6).trim());
                    } else if (proyecto instanceof DesarrolloDeSoftware) {
                        ((DesarrolloDeSoftware) proyecto).setTipoAplicacion(linea.substring(6).trim());
                    }
                } else if (linea.startsWith("ID: ")) {
                    proyecto.setProyectoID(linea.substring(4).trim());
                } else if (linea.startsWith("titulo: ")) {
                    proyecto.setTitulo(linea.substring(8).trim());
                } else if (linea.startsWith("descripcion: ")) {
                    proyecto.setDescripcion(linea.substring(13).trim());
                } else if (linea.startsWith("presupuesto: ")) {
                    proyecto.setPresupuesto(Float.parseFloat(linea.substring(13).trim()));
                } else if (linea.startsWith("fecha de inicio: ")) {
                    String[] fecha = linea.substring(17).split("/");
                    proyecto.setFechaInicio(new Fecha(Integer.parseInt(fecha[0]), Integer.parseInt(fecha[1]), Integer.parseInt(fecha[2])));
                } else if (linea.startsWith("fecha de entrega: ")) {
                    String[] fecha = linea.substring(18).split("/");
                    proyecto.setFechaFin(new Fecha(Integer.parseInt(fecha[0]), Integer.parseInt(fecha[1]), Integer.parseInt(fecha[2])));
                } else if (linea.startsWith("ingenieros:")) {
                    while (!(linea = reader.readLine().trim()).startsWith("recursos tecnologicos:")) {
                        if (linea.startsWith("nombre: ")) {
                            Ingeniero ingeniero = new Ingeniero();
                            ingeniero.setNombre(linea.substring(9).trim());
                            ingeniero.setApellido(reader.readLine().substring(10).trim());
                            ingeniero.setMail(reader.readLine().substring(6).trim());
                            ingeniero.setEspecialidad(reader.readLine().substring(13).trim());
                            String[] fechaContratacion = reader.readLine().substring(21).split("/");
                            ingeniero.setFechaContratacion(new Fecha(Integer.parseInt(fechaContratacion[0]), Integer.parseInt(fechaContratacion[1]), Integer.parseInt(fechaContratacion[2])));
                            ingeniero.setIdsProyectosAsociados(reader.readLine().substring(19).split(", "));
                            proyecto.agregarIngeniero(ingeniero);
                        }
                    }
                } else if (linea.startsWith("recursos tecnologicos:")) {
                    while (!(linea = reader.readLine().trim()).startsWith("//fin")) {
                        if (linea.startsWith("nombre: ")) {
                            RecursoTecnologico recurso = new RecursoTecnologico();
                            recurso.setNombre(linea.substring(9).trim());
                            recurso.setDescripcion(reader.readLine().substring(13).trim());
                            proyecto.agregarRecursoTecnologico(recurso);
                        }
                    }
                    proyectos.add(proyecto);
                }
            }
        }
        return proyectos;
    }