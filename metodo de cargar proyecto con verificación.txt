//inicio
    public static ArrayList<ProyectoTecnologico> cargarProyectosDesdeArchivo(
            String nombreArchivo, 
            ArrayList<Ingeniero> ingenierosDisponibles, 
            ArrayList<RecursoTecnologico> recursosDisponibles) throws IOException {

        ArrayList<ProyectoTecnologico> proyectos = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(nombreArchivo))) {
            String linea;
            ProyectoTecnologico proyecto = null;
            while ((linea = reader.readLine()) != null) {
                linea = linea.trim(); // Eliminar espacios en blanco

                // Determinar el tipo de proyecto
                if (linea.startsWith("proyecto de hardware")) {
                    proyecto = new DesarrolloDeHardware();
                } else if (linea.startsWith("proyecto de software")) {
                    proyecto = new DesarrolloDeSoftware();
                } 
                // Leer atributos del proyecto
                else if (linea.startsWith("tipo: ")) {
                    if (proyecto instanceof DesarrolloDeHardware) {
                        ((DesarrolloDeHardware) proyecto).setTipoDispositivo(linea.substring(6).trim());
                    } else if (proyecto instanceof DesarrolloDeSoftware) {
                        ((DesarrolloDeSoftware) proyecto).setTipoAplicacion(linea.substring(6).trim());
                    }
                } else if (linea.startsWith("ID: ")) {
                    proyecto.setProyectoID(linea.substring(4).trim());
                } else if (linea.startsWith("titulo: ")) {
                    proyecto.setTitulo(linea.substring(8).trim());
                } else if (linea.startsWith("descripcion: ")) {
                    proyecto.setDescripcion(linea.substring(13).trim());
                } else if (linea.startsWith("presupuesto: ")) {
                    proyecto.setPresupuesto(Float.parseFloat(linea.substring(13).trim()));
                } else if (linea.startsWith("fecha de inicio: ")) {
                    String[] fecha = linea.substring(17).split("/");
                    proyecto.setFechaInicio(new Fecha(
                        Integer.parseInt(fecha[0]), 
                        Integer.parseInt(fecha[1]), 
                        Integer.parseInt(fecha[2])
                    ));
                } else if (linea.startsWith("fecha de entrega: ")) {
                    String[] fecha = linea.substring(18).split("/");
                    proyecto.setFechaFin(new Fecha(
                        Integer.parseInt(fecha[0]), 
                        Integer.parseInt(fecha[1]), 
                        Integer.parseInt(fecha[2])
                    ));
                } 
                // Verificar y agregar ingenieros
                else if (linea.startsWith("ingenieros:")) {
                    boolean ingenieroValido = true;
                    while (!(linea = reader.readLine().trim()).startsWith("recursos tecnologicos:")) {
                        if (linea.startsWith("nombre: ")) {
                            String nombreIngeniero = linea.substring(8).trim();
                            // Buscar el ingeniero en la lista de ingenieros disponibles
                            Ingeniero ingenieroEncontrado = null;
                            for (Ingeniero ingeniero : ingenierosDisponibles) {
                                if (ingeniero.getNombre().equals(nombreIngeniero)) {
                                    ingenieroEncontrado = ingeniero;
                                    break;
                                }
                            }
                            // Si no se encuentra, marcar como inválido
                            if (ingenieroEncontrado == null) {
                                ingenieroValido = false;
                            } else {
                                proyecto.agregarIngeniero(ingenieroEncontrado);
                            }
                        }
                    }
                    // Si algún ingeniero no es válido, se aborta la carga de este proyecto
                    if (!ingenieroValido) {
                        System.out.println("Ingeniero(s) no válido(s) para el proyecto: " + proyecto.getTitulo());
                        continue;
                    }
                } 
                // Verificar y agregar recursos tecnológicos
                else if (linea.startsWith("recursos tecnologicos:")) {
                    boolean recursoValido = true;
                    while (!(linea = reader.readLine().trim()).startsWith("//fin")) {
                        if (linea.startsWith("nombre: ")) {
                            String nombreRecurso = linea.substring(9).trim();
                            // Buscar el recurso en la lista de recursos disponibles
                            RecursoTecnologico recursoEncontrado = null;
                            for (RecursoTecnologico recurso : recursosDisponibles) {
                                if (recurso.getNombre().equals(nombreRecurso)) {
                                    recursoEncontrado = recurso;
                                    break;
                                }
                            }
                            // Si no se encuentra, marcar como inválido
                            if (recursoEncontrado == null) {
                                recursoValido = false;
                            } else {
                                proyecto.agregarRecursoTecnologico(recursoEncontrado);
                            }
                        }
                    }
                    // Si algún recurso no es válido, se aborta la carga de este proyecto
                    if (!recursoValido) {
                        System.out.println("Recurso(s) no válido(s) para el proyecto: " + proyecto.getTitulo());
                        continue;
                    }
                    proyectos.add(proyecto);
                }
            }
        }
        return proyectos;
    }
//fin